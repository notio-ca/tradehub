"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")
URL_BASE = config("URL_BASE")
SITE_NAME = config("SITE_NAME")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = ["*"]

UNFOLD = {
    "SITE_TITLE": SITE_NAME,
    "SITE_HEADER": SITE_NAME,
    #"STYLES": [lambda request: static("core/style.css"),],
    #"SCRIPTS": [lambda request: static("core/script.js"),],
    "COLORS": {
        "primary": {
            "50": "67 171 230",
            "100": "67 171 231",
            "200": "67 171 232",
            "300": "67 171 233",
            "400": "67 171 234",
            "500": "38 106 178", # Highlight Text
            "600": "38 106 178", # Highlight Button
            "700": "67 171 235",
            "800": "67 171 236",
            "900": "67 171 237",
            "950": "67 171 238",
        },
    },
    "SITE_FAVICONS": [
        # {
        #     "rel": "icon",
        #     "sizes": "32x32",
        #     "type": "image/png",
        #     "href": lambda request: static("core/favicon-32x32.png"),
        # },
    ],
}

# Application definition

INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'folio',
]
# Copied from /lib/python3.8/site-packages/django/contrib/admin/sites.py
def get_app_list(self, request, app_label=None):
    # CONFIG
    app_order = {
        "folio": {"order": 1, "models":{"Account":3, "AccountTx":4, "Ticker":2, "TradeTx":1}},
    }
    app_rename = {"auth": "Access"}

    app_dict = self._build_app_dict(request, app_label)
    for app_key in app_dict:
        #print(app_key)
        # Rename Label
        if app_key in app_rename: 
            app_dict[app_key]["name"] = app_rename[app_key]

        try:
            app_dict[app_key]["order"] = app_order[app_key]["order"]
        except:
            app_dict[app_key]["order"] = 999
                
        for model in app_dict[app_key]["models"]:
            #print(model["object_name"])
            try:
                model["order"] = app_order[app_key]["models"][model["object_name"]]
            except:
                model["order"] = 999

    app_list = sorted(app_dict.values(), key=lambda x: x["order"])
    for app in app_list:
        app["models"].sort(key=lambda x: x["order"])
    return app_list

from django.contrib import admin
admin.AdminSite.get_app_list = get_app_list

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-ca'
TIME_ZONE = 'America/Montreal'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
if DEBUG:
    INTERNAL_IPS = ("10.0.0.1","10.0.0.2","10.0.0.3","10.0.0.4","10.0.0.5","10.0.0.6","10.0.0.7","10.0.0.8","10.0.0.9","10.0.0.10","10.0.0.11","10.0.0.12",) # Nginx IP request.META['REMOTE_ADDR']
    MIDDLEWARE += (
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    )
    INSTALLED_APPS += (
        'debug_toolbar',
    )
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_COLLAPSED': True,
        'INTERCEPT_REDIRECTS': False,
    }
